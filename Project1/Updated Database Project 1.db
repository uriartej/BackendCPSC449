-- courses table
CREATE TABLE courses (
    course_code TEXT PRIMARY KEY,
    department TEXT NOT NULL,
    name TEXT NOT NULL
);

INSERT INTO courses (course_code, department, name) VALUES
('CPSC120', 'Computer Science', 'Introduction to Programming'),
('CPSC121', 'Computer Science', 'Object Oriented Programming'),
('CPSC131', 'Computer Science', 'Data Structure'),
('MATH150A', 'Mathematics', 'Calculus I'),
('MATH150B', 'Mathematics', 'Calculus II');

-- instructors table
CREATE TABLE instructors (
    instructor_id INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);

INSERT INTO instructors (name) VALUES
('John Doe'),
('Will Smith'),
('Jane Noe');

-- classes_sections table
CREATE TABLE classes_sections (
    class_id INTEGER PRIMARY KEY,
    section_number TEXT NOT NULL,
    course_code TEXT NOT NULL,
    instructor_id INTEGER NOT NULL,
    max_enrollment INTEGER NOT NULL,
    current_enrollment INTEGER DEFAULT 0,
    is_frozen INTEGER DEFAULT 0, -- Using INTEGER for boolean representation
    FOREIGN KEY (course_code) REFERENCES courses (course_code),
    FOREIGN KEY (instructor_id) REFERENCES instructors (instructor_id),
    UNIQUE (section_number)
);

INSERT INTO classes_sections (section_number, course_code, instructor_id, current_enrollment, max_enrollment) VALUES
('01', 'CPSC120', 1, 25, 30),
('02', 'CPSC121', 2, 20, 25),
('03', 'MATH150A', 1, 15, 30),
('04', 'MATH150B', 3, 30, 30);

-- students table
CREATE TABLE students (
    student_id INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);

INSERT INTO students (name) VALUES
('Alice Parker'),
('Jill Doe'),
('Clara Star'),
('Bob Burger'),
('Sarah Lu');

-- registrations table
CREATE TABLE registrations (
    registration_id INTEGER PRIMARY KEY,
    class_id INTEGER NOT NULL,
    student_id INTEGER NOT NULL,
    status TEXT NOT NULL CHECK (status IN ('enrolled', 'not enrolled')),
    FOREIGN KEY (class_id) REFERENCES classes_sections (class_id),
    FOREIGN KEY (student_id) REFERENCES students (student_id)
);

INSERT INTO registrations (class_id, student_id, status) VALUES
(4, 100, 'not enrolled'),
(1, 101, 'enrolled'),
(1, 102, 'enrolled'),
(2, 103, 'enrolled'),
(3, 102, 'enrolled');

-- waiting_lists table
CREATE TABLE waiting_lists (
    waiting_list_id INTEGER PRIMARY KEY,
    section_number TEXT NOT NULL,
    student_id INTEGER NOT NULL,
    position INTEGER NOT NULL,
    date_added TEXT NOT NULL,
    FOREIGN KEY (section_number) REFERENCES classes_sections (section_number),
    FOREIGN KEY (student_id) REFERENCES students (student_id),
    UNIQUE (section_number, student_id)
);

INSERT INTO waiting_lists (section_number, student_id, position, date_added) VALUES
('01', 103, 1, '2023-09-25T10:00:00Z'),
('01', 102, 2, '2023-09-23T10:05:00Z'),
('02', 101, 3, '2023-09-20T09:10:00Z');

